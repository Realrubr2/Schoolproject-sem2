<diagram program="umletino" version="15.1"><zoom_level>6</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>600</x><y>354</y><w>228</w><h>90</h></coordinates><panel_attributes>CarLoanController
--
+ constructor
- carLoanService: CarLoanService,
- dateService: DateService
- userBySession: UserBySesionService
--
+ getCarsAvailableBetweenDates(req: Request, res: Response):
+ createCarLoan(req: Request, res: Response):
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>606</x><y>624</y><w>276</w><h>84</h></coordinates><panel_attributes>CarLoanCrud
--
+ constructor(- carLoan: CarLoanMysql | CarLoanSequelizeMysq
--
+ getCarsAvailableBetweenDates(): Promise&lt;BusinessVechicle[]&gt;
+ createCarLoan(): Promise&lt;CarLoan&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>690</x><y>456</y><w>60</w><h>42</h></coordinates><panel_attributes>Roept aan
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>534</x><y>780</y><w>252</w><h>78</h></coordinates><panel_attributes>CarLoanMysql
--
-pool: mysql2.Pool
--
CarLoanMysql
--
+ getCarsAvailableBetweenDates(): Promise&lt;BusinessVechicle[]&gt;
+ createCarLoan(): Promise&lt;CarLoan&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>594</x><y>702</y><w>96</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;130;10;100;140;100;140;10</additional_attributes></element><element><id>Text</id><coordinates><x>636</x><y>720</y><w>60</w><h>42</h></coordinates><panel_attributes>Roept aan
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>924</x><y>372</y><w>228</w><h>90</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
carLoanCrudInterface
--
+ getCarsAvailableBetweenDates(): Promise&lt;BusinessVechicle[]&gt;
+ createCarLoan(): Promise&lt;CarLoan&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>876</x><y>456</y><w>126</w><h>222</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>190;10;190;350;10;350</additional_attributes></element><element><id>UMLClass</id><coordinates><x>246</x><y>546</y><w>246</w><h>96</h></coordinates><panel_attributes>BussinesVechicle
--
- licensePlate: string;
- vehicleType: string;
- fuelType: string;
--
+constructor(licensePlate: string, vechicleType: string, fuelType: string)
+ get  _licensePlate(): string
+ get _vechicleType(): string
+ get _fuelType(): string




</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>486</x><y>552</y><w>144</w><h>36</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;40;140;40;140;10;220;10</additional_attributes></element><element><id>Text</id><coordinates><x>462</x><y>762</y><w>78</w><h>42</h></coordinates><panel_attributes>Word gebruikt om de juiste objecten te gebruiken
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>618</x><y>498</y><w>252</w><h>66</h></coordinates><panel_attributes>CarLoanService
--
constructor(-crudinterface: CarLoanCrudInterface)
--
+ getCarsAvailableBetweenDates(): Promise&lt;BusinessVechicle[]&gt;
+ createCarLoan(): Promise&lt;CarLoan&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>678</x><y>438</y><w>18</w><h>72</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>738</x><y>558</y><w>18</w><h>78</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element><element><id>Text</id><coordinates><x>750</x><y>582</y><w>60</w><h>42</h></coordinates><panel_attributes>Roept aan
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>864</x><y>456</y><w>102</w><h>90</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>150;10;150;130;10;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>798</x><y>780</y><w>252</w><h>78</h></coordinates><panel_attributes>CarLoanMysqlSequelize
--
CarLoanSequelizeMysql)
--
+ getCarsAvailableBetweenDates(): Promise&lt;BusinessVechicle[]&gt;
+ createCarLoan(): Promise&lt;CarLoan&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>564</x><y>126</y><w>126</w><h>60</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
iCarLoanSearch
--
	getFuelType(): string | undefined;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>678</x><y>180</y><w>18</w><h>66</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Text</id><coordinates><x>516</x><y>186</y><w>156</w><h>54</h></coordinates><panel_attributes>implements
DIt is een contract om ervoor te zorgen
dat alle methodes worden geimplementeerd 
en de accesmodifiers worden gewaarborgd</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>774</x><y>702</y><w>126</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>190;130;190;80;10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>432</x><y>636</y><w>186</w><h>42</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;10;50;290;50</additional_attributes></element><element><id>Text</id><coordinates><x>876</x><y>516</y><w>60</w><h>42</h></coordinates><panel_attributes>Implements
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>780</x><y>726</y><w>60</w><h>42</h></coordinates><panel_attributes>Roept aan
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1020</x><y>456</y><w>18</w><h>336</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;540</additional_attributes></element><element><id>Relation</id><coordinates><x>744</x><y>456</y><w>276</w><h>336</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>440;10;440;510;10;510;10;540</additional_attributes></element><element><id>UMLClass</id><coordinates><x>570</x><y>30</y><w>90</w><h>60</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
iDateSearch
--
	getStartDate(): Date;
	getEndDate(): Date;


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>546</x><y>234</y><w>222</w><h>72</h></coordinates><panel_attributes>CarLoanSearch
--
-fuelType: string;
--

+constructor(startDate: Date, endDate: Date, fuelType?: string)
+ getFuelType(): string | undefined
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>84</y><w>18</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Text</id><coordinates><x>618</x><y>96</y><w>60</w><h>42</h></coordinates><panel_attributes>extends</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>834</x><y>72</y><w>84</w><h>90</h></coordinates><panel_attributes>DateSearch
--
- startDate: Date;
- endDate: Date;
--
constructor()


--
+ getStartDate(): Date
+ getEndDate(): Date 

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>648</x><y>48</y><w>240</w><h>30</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;380;10;380;30</additional_attributes></element><element><id>Relation</id><coordinates><x>726</x><y>156</y><w>144</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>220;10;220;40;10;40;10;130</additional_attributes></element><element><id>Text</id><coordinates><x>732</x><y>192</y><w>60</w><h>42</h></coordinates><panel_attributes>extends
intherits van 
DateSrearch</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>696</x><y>300</y><w>18</w><h>66</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>204</y><w>264</w><h>66</h></coordinates><panel_attributes>DateService
--
+ validateDateOrderAndFuture(startDate: Date, endDate: Date): void
+ validateDates(startDate: Date, endDate: Date): void
+ parseDates(startDate: string | Date, endDate: string | Date): [Date, Date]
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>786</x><y>264</y><w>66</w><h>102</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>90;10;90;100;10;100;10;150</additional_attributes></element><element><id>Relation</id><coordinates><x>846</x><y>264</y><w>72</w><h>246</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>100;10;100;150;10;150;10;390</additional_attributes></element><element><id>Text</id><coordinates><x>858</x><y>360</y><w>66</w><h>72</h></coordinates><panel_attributes>Roept aan
&amp;
Gebruikt de 
validateDateOrderAndFuture
om de invoer te valideren
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>774</x><y>252</y><w>66</w><h>72</h></coordinates><panel_attributes>Roept aan 
&amp;
Gebruikt de
parsedates om de invoer
naar dates te veranderen

style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>114</y><w>102</w><h>102</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>150;150;150;10;10;10</additional_attributes></element><element><id>Text</id><coordinates><x>648</x><y>312</y><w>60</w><h>42</h></coordinates><panel_attributes>dependant
Maakt instance
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>942</x><y>36</y><w>132</w><h>84</h></coordinates><panel_attributes>Roept aan
&amp;
gebruikt de
validateDates om bij het aanmaken  van het object de datums te valideren of het dates zijn
zorgt ervoor dat als er een nieuw
object wordt aangemaakt het
correcte dates zijn
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>906</x><y>546</y><w>90</w><h>72</h></coordinates><panel_attributes>Implements
Zorgt ervoor dat de class alle methoden bevat  die in de interface zijn gedefineerd
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>246</x><y>420</y><w>246</w><h>96</h></coordinates><panel_attributes>CarLoan
--
- email: string;
- licensePlate: string;
- startDate: Date;
- endDate: Date;
--
+constructor(licensePlate: string, vechicleType: string, fuelType: string)
+ get  _licensePlate(): string
+ get _vechicleType(): string
+ get _fuelType(): string


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>486</x><y>480</y><w>144</w><h>36</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;170;10;170;40;220;40</additional_attributes></element><element><id>UMLNote</id><coordinates><x>192</x><y>42</y><w>150</w><h>114</h></coordinates><panel_attributes>De Class diagram heeft mij veel nieuwe
inzichten gegeven ik zou een volgende keer
eerst de classdiagram maken en daarna
aan de code beginnen
dit verbetert de logica en zorgt voor minder
refactors
Ik zie nu door de nieuw geleerde stof
en het maken van de classdirgam
dat er nog veel gerefactored kan worden
ik heb al een groot deel gedaan
maar het is helaas te veel om allemaal nog te 
implementeren
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>462</x><y>708</y><w>78</w><h>42</h></coordinates><panel_attributes>Word gebruikt om de juiste objecten te gebruiken
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>378</x><y>96</y><w>102</w><h>42</h></coordinates><panel_attributes>@author Storm Verwer
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>432</y><w>102</w><h>66</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
carLoan
--
+get _email(): string
+ get  _licensePlate(): string
+ get _startDate(): Date
+ get _endDate(): Date


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>498</x><y>582</y><w>108</w><h>42</h></coordinates><panel_attributes>
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>96</x><y>462</y><w>162</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;250;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>36</x><y>396</y><w>102</w><h>30</h></coordinates><panel_attributes>Implements
Contract voor class CarLoan
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>558</y><w>102</w><h>66</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
bussinesVechicle
--
carLoan
+ get  _licensePlate(): string
+ get _vechicleType(): string
+ get _fuelType(): string


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>96</x><y>588</y><w>162</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;250;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>12</x><y>630</y><w>132</w><h>30</h></coordinates><panel_attributes>Implements
Contract voor class BussinessVechicle
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>414</x><y>636</y><w>132</w><h>198</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;10;310;200;310</additional_attributes></element><element><id>Relation</id><coordinates><x>486</x><y>498</y><w>66</w><h>294</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;90;10;90;470</additional_attributes></element><element><id>Text</id><coordinates><x>1044</x><y>570</y><w>90</w><h>72</h></coordinates><panel_attributes>Implements
Zorgt ervoor dat de class alle methoden bevat  die in de interface zijn gedefineerd
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>126</x><y>492</y><w>90</w><h>72</h></coordinates><panel_attributes>Implements
Zorgt ervoor dat de class alle methoden bevat  die in de interface zijn gedefineerd
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>690</x><y>0</y><w>156</w><h>54</h></coordinates><panel_attributes>implements
DIt is een contract om ervoor te zorgen
dat alle methodes worden geimplementeerd 
en de accesmodifiers worden gewaarborgd</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>228</x><y>306</y><w>276</w><h>72</h></coordinates><panel_attributes>CarLoanFactory--
--
- instance: CarLoanFactory
--
-constructor()
+ getInstance(): CarLoanFactory
+ createSearch(startDate: Date, endDate:Date, fuelType: string
+ createLoan(email: string, licensePlate: string, startDate: Date, endDate: Date
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>498</x><y>360</y><w>114</w><h>18</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;170;10</additional_attributes></element><element><id>Text</id><coordinates><x>504</x><y>366</y><w>90</w><h>72</h></coordinates><panel_attributes>De CarLoanFactory class wordt gebruikt om instanties van carloan en carloansearch te maken
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>738</x><y>450</y><w>84</w><h>42</h></coordinates><panel_attributes>bussiness logica
bg=blue</panel_attributes><additional_attributes></additional_attributes></element></diagram>